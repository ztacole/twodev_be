openapi: 3.0.0
info:
  title: TwoDev API
  description: API autentikasi untuk aplikasi USK
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
tags:
  - name: auth
    description: Semua endpoint terkait autentikasi pengguna
  - name: FR.APL.01
    description: Semua endpoint terkait permohonan sertifikasi kompetensi
  - name: FR.APL.02
    description: Semua endpoint terkait asesmen mandiri
  - name: Schedule
    description: Semua endpoint terkait manajemen jadwal asesmen
  # - name: Export - Import
  #   description: Semua endpoint terkait ekspor dan impor data
  # - name: assessment
  #   description: Semua endpoint terkait manajemen asesmen
  # - name: assessor
  #   description: Semua endpoint terkait manajemen assessor
  # - name: assessee
  #   description: Semua endpoint terkait manajemen assessee
paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Register pengguna baru
      description: Membuat akun pengguna baru dengan email, password, full name, dan role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - confirm_password
                - full_name
                - role_id
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                confirm_password:
                  type: string
                full_name:
                  type: string
                role_id:
                  type: integer
            example:
              email: "user@example.com"
              password: "password123"
              confirm_password: "password123"
              full_name: "John Doe"
              role_id: 2
      responses:
        "201":
          description: Registrasi berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      full_name:
                        type: string
                      role_id:
                        type: integer
              example:
                success: true
                message: "User registered successfully"
                data:
                  id: 1
                  email: "user@example.com"
                  full_name: "John Doe"
                  role_id: 2
        "400":
          description: Validasi gagal
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: false
                message: "Password dan confirm password tidak sama"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: false
                message: "Server error"

  /auth/login:
    post:
      tags:
        - auth
      summary: Login pengguna
      description: Autentikasi user dengan email dan password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
            example:
              email: "user@example.com"
              password: "password123"
      responses:
        "200":
          description: Login berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      token:
                        type: string
              example:
                success: true
                message: "Login successful"
                data:
                  token: "eyJhbGciOiJIUzI1NiIsInR..."
        "400":
          description: Input tidak lengkap
        "401":
          description: Email atau password salah
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: false
                message: "Invalid email or password"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: false
                message: "Server error"

  /auth/me:
    get:
      tags:
        - auth
      summary: Mendapatkan data user saat ini
      description: Mengembalikan informasi user berdasarkan token Bearer
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Informasi user berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      full_name:
                        type: string
                      email:
                        type: string
                      role_id:
                        type: integer
              example:
                success: true
                data:
                  id: 1
                  full_name: "John Doe"
                  email: "user@example.com"
                  role_id: 2
        "401":
          description: Token tidak valid atau tidak ada
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: false
                message: "Token is required or invalid"
        "404":
          description: User tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: false
                message: "User not found"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: false
                message: "Server error"

  /assessment/apl1/create-self-data:
    post:
      tags:
        - FR.APL.01
      summary: Membuat asesmen
      description: Membuat asesmen dengan user_id, full_name, identity_number, birth_date, birth_location, gender, nationality, phone_no, address, postal_code, educational_qualifications, jobs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - full_name
                - identity_number
                - birth_date
                - birth_location
                - gender
                - nationality
                - phone_no
                - address
                - postal_code
                - educational_qualifications
                - jobs
              properties:
                user_id:
                  type: integer
                full_name:
                  type: string
                identity_number:
                  type: string
                birth_date:
                  type: string
                  format: date-time
                birth_location:
                  type: string
                gender:
                  type: string
                nationality:
                  type: string
                phone_no:
                  type: string
                house_phone_no:
                  type: string
                office_phone_no:
                  type: string
                address:
                  type: string
                postal_code:
                  type: string
                educational_qualifications:
                  type: string
                jobs:
                  type: array
                  items:
                    type: object
                    properties:
                      institution_name:
                        type: string
                      address:
                        type: string
                      position:
                        type: string
                      phone_no:
                        type: string
                      job_email:
                        type: string
            example:
              user_id: 2
              full_name: "John Doe"
              identity_number: "1234567890123456"
              birth_date: "1995-04-10T00:00:00Z"
              birth_location: "Surabaya"
              gender: "Male"
              nationality: "Indonesia"
              phone_no: "081234567890"
              house_phone_no: "0211234567"
              office_phone_no: "0311234567"
              address: "Jl. Merdeka No. 20"
              postal_code: "60271"
              educational_qualifications: "Sarjana Komputer"
              jobs:
                - institution_name: "PT. ABC"
                  address: "Jl. Raya Jakarta Cikampek No. 1"
                  postal_code: "12345"
                  position: "Software Engineer"
                  phone_no: "0211234567"
                  job_email: "john.doe@ptabc.com"
      responses:
        "201":
          description: Asesmen berhasil dibuat
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      user_id:
                        type: integer
                      full_name:
                        type: string
                      identity_number:
                        type: string
                      birth_date:
                        type: string
                        format: date-time
                      birth_location:
                        type: string
                      gender:
                        type: string
                      nationality:
                        type: string
                      phone_no:
                        type: string
                      house_phone_no:
                        type: string
                      office_phone_no:
                        type: string
                      address:
                        type: string
                      postal_code:
                        type: string
                      educational_qualifications:
                        type: string
                      jobs:
                        type: array
                        items:
                          type: object
                          properties:
                            institution_name:
                              type: string
                            address:
                              type: string
                            postal_code:
                              type: string
                            position:
                              type: string
                            phone_no:
                              type: string
                            job_email:
                              type: string
              example:
                success: true
                message: "Asesmen berhasil dibuat"
                data:
                  id: 1
                  user_id: 1
                  full_name: "John Doe"
                  identity_number: "1234567890"
                  birth_date: "1990-05-20T00:00:00Z"
                  birth_location: "Jakarta"
                  gender: "Male"
                  nationality: "Indonesian"
                  phone_no: "081234567890"
                  house_phone_no: "081234567890"
                  office_phone_no: "081234567890"
                  address: "Jl. Mawar No. 10, Jakarta"
                  postal_code: "12345"
                  educational_qualifications: "Bachelor of Computer Science"
                  jobs:
                    - id: 1
                      assessee_id: 1
                      institution_name: "PT. ABC"
                      address: "Jl. Mawar No. 10, Jakarta"
                      postal_code: "12345"
                      position: "Software Engineer"
                      phone_no: "081234567890"
                      job_email: "user@example.com"
        "500":
          description: Terjadi kesalahan server
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: false
                message: "Server error"

  /assessment/apl1/create-certificate-data:
    post:
      tags:
        - FR.APL.01
      summary: Buat Sertifikat Asesmen
      description: Membuat sertifikat asesmen dengan data Result_Docs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                result_id:
                  type: integer
                assessor_id:
                  type: integer
                purpose:
                  type: string
                school_report_card:
                  type: string
                field_work_practice_certificate:
                  type: string
                student_card:
                  type: string
                family_card:
                  type: string
                id_card:
                  type: string
              required:
                - result_id
                - assessor_id
                - purpose
                - school_report_card
                - field_work_practice_certificate
                - student_card
                - family_card
                - id_card
            example:
              result_id: 1
              assessor_id: 1
              purpose: "Certification Purpose"
              school_report_card: "URL to report card"
              field_work_practice_certificate: "URL to practice certificate"
              student_card: "URL to student card"
              family_card: "URL to family card"
              id_card: "URL to ID card"
      responses:
        "201":
          description: Sertifikat asesmen berhasil dibuat
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      result_id:
                        type: integer
                      assessor_id:
                        type: integer
                      purpose:
                        type: string
                      school_report_card:
                        type: string
                      field_work_practice_certificate:
                        type: string
                      student_card:
                        type: string
                      family_card:
                        type: string
                      id_card:
                        type: string
              example:
                success: true
                message: "Sertifikat asesmen berhasil dibuat"
                data:
                  id: 1
                  result_id: 1
                  assessor_id: 1
                  purpose: "Certification Purpose"
                  school_report_card: "URL to report card"
                  field_work_practice_certificate: "URL to practice certificate"
                  student_card: "URL to student card"
                  family_card: "URL to family card"
                  id_card: "URL to ID card"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: false
                message: "Server error"

  /assessment/apl1/upload-certificate-docs/{assessorId}/{assesseeId}:
    post:
      tags:
        - FR.APL.01
      summary: Upload dokumen sertifikat APL1
      description: >
        Mengupload dokumen sertifikat untuk asesmen APL1.  
        Field yang diterima:
          - **school_report_card**: Rapor sekolah
          - **field_work_practice_certificate**: Sertifikat PKL
          - **student_card**: Kartu pelajar
          - **family_card**: Kartu keluarga
          - **id_card**: KTP
        Semua file harus dalam format gambar (`image/*`), ukuran maksimal 5MB per file.
      parameters:
        - name: assessorId
          in: path
          required: true
          description: ID asesor
          schema:
            type: integer
        - name: assesseeId
          in: path
          required: true
          description: ID asesi
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                school_report_card:
                  type: string
                  format: binary
                field_work_practice_certificate:
                  type: string
                  format: binary
                student_card:
                  type: string
                  format: binary
                family_card:
                  type: string
                  format: binary
                id_card:
                  type: string
                  format: binary
      responses:
        "200":
          description: Dokumen berhasil diupload
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    additionalProperties:
                      type: string
              example:
                success: true
                message: "Certificate documents uploaded successfully"
                data:
                  school_report_card: "http://localhost:3000/uploads/apl1/1/school_report_card-123.jpg"
                  field_work_practice_certificate: "http://localhost:3000/uploads/apl1/1/field_work_practice_certificate-456.jpg"
        "400":
          description: Tidak ada file yang diupload
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: false
                message: "No files were uploaded"
        "500":
          description: Terjadi kesalahan server
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: false
                message: "Internal server error"

  /assessment/apl2/create-assessment:
    post:
      tags:
        - FR.APL.02
      summary: Buat asesmen
      description: Membuat asesmen dengan occupation_id, code, unit_competencies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - occupation_id
                - code
                - unit_competencies
              properties:
                occupation_id:
                  type: integer
                code:
                  type: string
                unit_competencies:
                  type: array
                  items:
                    type: object
                    required:
                      - unit_code
                      - title
                      - elements
                    properties:
                      unit_code:
                        type: string
                      title:
                        type: string
                      elements:
                        type: array
                        items:
                          type: object
                          required:
                            - title
                            - element_details
                          properties:
                            title:
                              type: string
                            element_details:
                              type: array
                              items:
                                type: object
                                required:
                                  - description
                                properties:
                                  description:
                                    type: string
            example:
              occupation_id: 1
              code: "SKM.RPL.PJ/LSPSMK24/2025"
              unit_competencies:
                - unit_code: "UC-001"
                  title: "Basic Programming Skills"
                  elements:
                    - title: "Write simple programs"
                      element_details:
                        - description: "Understand basic syntax"
                        - description: "Use variables and data types"
                    - title: "Debug programs"
                      element_details:
                        - description: "Identify common errors"
                        - description: "Use debugging tools"
                - unit_code: "UC-002"
                  title: "Database Fundamentals"
                  elements:
                    - title: "Create database tables"
                      element_details:
                        - description: "Define proper data types"
                        - description: "Set primary keys"
      responses:
        "201":
          description: Asesmen berhasil dibuat
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      occupation_id:
                        type: integer
                      code:
                        type: string
                      unit_competencies:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            unit_code:
                              type: string
                            title:
                              type: string
                            elements:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                  title:
                                    type: string
                                  element_details:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        id:
                                          type: integer
                                        description:
                                          type: string
              example:
                success: true
                message: "Asesmen berhasil dibuat"
                data:
                  id: 1
                  occupation_id: 1
                  code: "SKM.RPL.PJ/LSPSMK24/2025"
                  unit_competencies:
                    - id: 1
                      unit_code: "UC-001"
                      title: "Basic Programming Skills"
                      elements:
                        - id: 1
                          title: "Write simple programs"
                          element_details:
                            - id: 1
                              description: "Understand basic syntax"
                            - id: 2
                              description: "Use variables and data types"
                        - id: 2
                          title: "Debug programs"
                          element_details:
                            - id: 3
                              description: "Identify common errors"
                            - id: 4
                              description: "Use debugging tools"
                    - id: 2
                      unit_code: "UC-002"
                      title: "Database Fundamentals"
                      elements:
                        - id: 5
                          title: "Create database tables"
                          element_details:
                            - id: 5
                              description: "Define proper data types"
                            - id: 6
                              description: "Set primary keys"
        "500":
          description: Terjadi kesalahan server
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: false
                message: "Internal server error"

  /assessment/apl2/:
    get:
      tags:
        - FR.APL.02
      summary: Mendapatkan daftar asesmen
      description: Mendapatkan daftar asesmen dengan occupation dan unit_competencies
      responses:
        200:
          description: Daftar asesmen
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    occupation:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        scheme:
                          type: object
                          properties:
                            id:
                              type: integer
                            code:
                              type: string
                            name:
                              type: string
                    code:
                      type: string
                    unit_competencies:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          unit_code:
                            type: string
                          title:
                            type: string
                          elements:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                title:
                                  type: string
                                details:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        type: integer
                                      description:
                                        type: string
              example:
                - id: 1
                  occupation:
                    id: 1
                    name: "Software Developer"
                    scheme:
                      id: 1
                      code: "SD-001"
                      name: "Software Development"
                  code: "APL2-001"
                  unit_competencies:
                    - id: 1
                      unit_code: "UC-101"
                      title: "Programming Basics"
                      elements:
                        - id: 1
                          title: "Write simple programs"
                          details:
                            - id: 1
                              description: "Understand basic syntax"
                            - id: 2
                              description: "Use variables and data types"
        404:
          description: Asesmen tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: false
                message: "No assessments found"
        500:
          description: Terjadi kesalahan
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: false
                message: "Internal server error"

  /assessment/apl2/{id}:
    get:
      tags:
        - FR.APL.02
      summary: Mendapatkan asesmen
      description: Mendapatkan asesmen dengan occupation dan unit_competencies
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Asesmen
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  occupation:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      scheme:
                        type: object
                        properties:
                          id:
                            type: integer
                          code:
                            type: string
                          name:
                            type: string
                  code:
                    type: string
                  unit_competencies:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        unit_code:
                          type: string
                        title:
                          type: string
                        elements:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              title:
                                type: string
                              details:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                    description:
                                      type: string
              example:
                id: 1
                occupation:
                  id: 1
                  name: "Software Developer"
                  scheme:
                    id: 1
                    code: "SD-001"
                    name: "Software Development"
                code: "APL2-001"
                unit_competencies:
                  - id: 1
                    unit_code: "UC-101"
                    title: "Programming Basics"
                    elements:
                      - id: 1
                        title: "Write simple programs"
                        details:
                          - id: 1
                            description: "Understand basic syntax"
                          - id: 2
                            description: "Use variables and data types"
        404:
          description: Assessment tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: false
                message: "Assessment not found"
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: false
                message: "Internal server error"

  /assessment/apl2/unit-competencies/{assessmentId}:
    get:
      tags:
        - FR.APL.02
      summary: Mendapatkan daftar unit kompetensi berdasarkan Assessment ID
      parameters:
        - name: assessmentId
          in: path
          required: true
          schema:
            type: integer
          description: ID asesmen
      responses:
        "200":
          description: Unit competencies retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Unit competencies retrieved successfully
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        unit_code:
                          type: string
                          example: UC-001
                        title:
                          type: string
                          example: Instalasi Jaringan Dasar
              example:
                success: true
                message: Unit competencies retrieved successfully
                data:
                  - id: 1
                    unit_code: UC-001
                    title: Instalasi Jaringan Dasar
                  - id: 2
                    unit_code: UC-002
                    title: Membuat Program
        "404":
          description: Unit competencies not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unit competencies not found
              example:
                success: false
                message: Unit competencies not found
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
              example:
                success: false
                message: "Internal server error"

  /assessment/apl2/unit-competencies/elements/{unitCompetencyId}:
    get:
      tags:
        - FR.APL.02
      summary: Mendapatkan daftar elemen berdasarkan Unit Competency ID
      parameters:
        - name: unitCompetencyId
          in: path
          required: true
          schema:
            type: integer
          description: ID unit kompetensi
      responses:
        "200":
          description: Elements retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Elements retrieved successfully
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 10
                        title:
                          type: string
                          example: Instalasi Jaringan Dasar
                        details:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 100
                              description:
                                type: string
                                example: Menentukan jenis kabel yang sesuai untuk instalasi
              example:
                success: true
                message: Elements retrieved successfully
                data:
                  - id: 10
                    title: Instalasi Jaringan Dasar
                    details:
                      - id: 100
                        description: Menentukan jenis kabel yang sesuai untuk instalasi
                      - id: 101
                        description: Membuat kabel sesuai dengan kebutuhan
        "404":
          description: Elements not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Elements not found
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  # /uploads/:
  #   get:
  #     tags:
  #       - Export - Import
  #     summary: Get uploaded files
  #     description: Mengambil file yang diunggah.
  #     responses:
  #       "200":
  #         description: Files retrieved successfully
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               example:
  #                 success: true
  #                 message: "Files retrieved successfully"
  #                 data:
  #                   - filename: "example.docx"
  #                     url: "/api/uploads/example.docx"
  #       "500":
  #         description: Server error
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string

  /schedule:
    get:
      tags:
        - Schedule
      summary: Mengambil semua jadwal
      description: Mengambil semua jadwal asesmen.
      responses:
        "200":
          description: Jadwal berhasil diambil
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: "Jadwal berhasil diambil"
                  data:
                    - id: 1
                      assessment:
                        id: 2
                        code: "ASM-001"
                        occupation:
                          id: 4
                          name: "Teknisi Jaringan"
                          scheme:
                            id: 5
                            code: "SKM-001"
                            name: "Skema Jaringan Dasar"
                      start_date: "2025-08-10T08:00:00Z"
                      end_date: "2025-08-12T16:00:00Z"
        "404":
          description: Tidak ada jadwal ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
    post:
      tags:
        - Schedule
      summary: Membuat jadwal baru
      description: Membuat jadwal asesmen baru.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example:
                assessment_id: 1
                start_date: "2025-08-10T08:00:00Z"
                end_date: "2025-08-12T16:00:00Z"
                schedule_details:
                  - assessor_id: 3
                    location: "Ruang Uji Kompetensi A"
                  - assessor_id: 4
                    location: "Ruang Uji Kompetensi B"
      responses:
        "201":
          description: Jadwal berhasil dibuat
          content:
            application/json:
              schema:
                example:
                  success: true
                  message: "Jadwal berhasil dibuat"
                  data:
                    id: 1
                    assessment:
                      id: 2
                      code: "ASM-001"
                      occupation:
                        id: 4
                        name: "Teknisi Jaringan"
                        scheme:
                          id: 5
                          code: "SKM-001"
                          name: "Skema Jaringan Dasar"
                    start_date: "2025-08-10T08:00:00Z"
                    end_date: "2025-08-12T16:00:00Z"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                example:
                  success: false
                  message: "Server error"

  /schedule/{id}:
    get:
      tags:
        - Schedule
      summary: Mengambil jadwal berdasarkan ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID dari jadwal
      responses:
        "200":
          description: Jadwal berhasil diambil
          content:
            application/json:
              schema:
                example:
                  success: true
                  message: "Jadwal berhasil diambil"
                  data:
                    id: 1
                    assessment:
                      id: 2
                      code: "ASM-001"
                      occupation:
                        id: 4
                        name: "Teknisi Jaringan"
                        scheme:
                          id: 5
                          code: "SKM-001"
                          name: "Skema Jaringan Dasar"
                    start_date: "2025-08-10T08:00:00Z"
                    end_date: "2025-08-12T16:00:00Z"
        "404":
          description: Jadwal tidak ditemukan
          content:
            application/json:
              schema:
                example:
                  success: false
                  message: "Jadwal tidak ditemukan"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                example:
                  success: false
                  message: "Server error"

  /schedule/active:
    get:
      tags:
        - Schedule
      summary: Mengambil jadwal aktif
      description: Mengambil jadwal asesmen yang sedang berlangsung.
      responses:
        "200":
          description: Jadwal aktif berhasil diambil
          content:
            application/json:
              schema:
                example:
                  success: true
                  message: "Jadwal aktif berhasil diambil"
                  data:
                    - id: 1
                      assessment:
                        id: 2
                        code: "ASM-001"
                        occupation:
                          id: 4
                          name: "Teknisi Jaringan"
                          scheme:
                            id: 5
                            code: "SKM-001"
                            name: "Skema Jaringan Dasar"
                      start_date: "2025-08-10T08:00:00Z"
                      end_date: "2025-08-12T16:00:00Z"
        "404":
          description: Tidak ada jadwal aktif ditemukan
          content:
            application/json:
              schema:
                example:
                  success: false
                  message: "Tidak ada jadwal aktif ditemukan"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                example:
                  success: false
                  message: "Server error"

  /schedule/completed:
    get:
      tags:
        - Schedule
      summary: Mengambil jadwal yang sudah selesai
      description: Mengambil jadwal asesmen yang sudah selesai.
      responses:
        "200":
          description: Jadwal selesai berhasil diambil
          content:
            application/json:
              schema:
                example:
                  success: true
                  message: "Jadwal selesai berhasil diambil"
                  data:
                    - id: 1
                      assessment:
                        id: 2
                        code: "ASM-001"
                        occupation:
                          id: 4
                          name: "Teknisi Jaringan"
                          scheme:
                            id: 5
                            code: "SKM-001"
                            name: "Skema Jaringan Dasar"
                      start_date: "2025-08-10T08:00:00Z"
                      end_date: "2025-08-12T16:00:00Z"
        "404":
          description: Tidak ada jadwal selesai ditemukan
          content:
            application/json:
              schema:
                example:
                  success: false
                  message: "Tidak ada jadwal selesai ditemukan"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                example:
                  success: false
                  message: "Server error"

  /schedule/completed/{assesseeId}:
    get:
      tags:
        - Schedule
      summary: Mengambil jadwal selesai berdasarkan ID asessee
      parameters:
        - name: assesseeId
          in: path
          required: true
          schema:
            type: integer
          description: ID dari asessee
      responses:
        "200":
          description: Jadwal selesai berhasil diambil
          content:
            application/json:
              schema:
                example:
                  success: true
                  message: "Jadwal selesai berhasil diambil"
                  data:
                    - id: 1
                      assessment:
                        id: 2
                        code: "ASM-001"
                        occupation:
                          id: 4
                          name: "Teknisi Jaringan"
                          scheme:
                            id: 5
                            code: "SKM-001"
                            name: "Skema Jaringan Dasar"
                      start_date: "2025-08-10T08:00:00Z"
                      end_date: "2025-08-12T16:00:00Z"
        "404":
          description: Tidak ada jadwal selesai ditemukan untuk asessee dengan ID tersebut
          content:
            application/json:
              schema:
                example:
                  success: false
                  message: Tidak ada jadwal selesai ditemukan untuk asessee dengan id ${req.params.assesseeId}
        "500":
          description: Server error
          content:
            application/json:
              schema:
                example:
                  success: false
                  message: "Server error"
  
  # /assessement:
  #   post:
  #     tags:
  #       - assessement
  #     summary: Membuat asesmen
  #     description: Membuat asesmen dengan schema_id, code, status, start_date, end_date
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             required:
  #               - schema_id
  #               - code
  #               - status
  #               - start_date
  #               - end_date
  #             properties:
  #               schema_id:
  #                 type: integer
  #               code:
  #                 type: string
  #               status:
  #                 type: string
  #               start_date:
  #                 type: string
  #                 format: date-time
  #               end_date:
  #                 type: string
  #                 format: date-time
  #           example:
  #             schema_id: 1
  #             code: "ASSESS-001"
  #             status: "active"
  #             start_date: "2023-10-01T00:00:00Z"
  #             end_date: "2023-10-31T23:59:59Z"
  #     responses:
  #       "201":
  #         description: Asesmen berhasil dibuat
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #                 data:
  #                   type: object
  #                   properties:
  #                     id:
  #                       type: integer
  #                     schema_id:
  #                       type: integer
  #                     code:
  #                       type: string
  #                     status:
  #                       type: string
  #                     start_date:
  #                       type: string
  #                       format: date-time
  #                     end_date:
  #                       type: string
  #                       format: date-time
  #             example:
  #               success: true
  #               message: "Asesmen berhasil dibuat"
  #               data:
  #                 id: 1
  #                 schema_id: 1
  #                 code: "ASSESS-001"
  #                 status: "active"
  #                 start_date: "2023-10-01T00:00:00Z"
  #                 end_date: "2023-10-31T23:59:59Z"
  #       "500":
  #         description: Server error
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: false
  #               message: "Server error"
  #   get:
  #     tags:
  #       - assessement
  #     summary: Mendapatkan daftar asesmen
  #     description: Mengambil semua asesmen yang tersedia
  #     responses:
  #       "200":
  #         description: Daftar asesmen berhasil diambil
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 data:
  #                   type: array
  #                   items:
  #                     type: object
  #                     properties:
  #                       id:
  #                         type: integer
  #                       schema_id:
  #                         type: integer
  #                       code:
  #                         type: string
  #                       status:
  #                         type: string
  #                       start_date:
  #                         type: string
  #                         format: date-time
  #                       end_date:
  #                         type: string
  #                         format: date-time
  #             example:
  #               success: true
  #               message: "Daftar asesmen berhasil diambil"
  #               data:
  #                 - id: 1
  #                   schema_id: 1
  #                   code: "ASSESS-001"
  #                   status: "active"
  #                   start_date: "2023-10-01T00:00:00Z"
  #                   end_date: "2023-10-31T23:59:59Z"
  #       "500":
  #         description: Server error
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: false
  #               message: "Server error"

  # /assessement/{id}:
  #   get:
  #     tags:
  #       - assessement
  #     summary: Mendapatkan detail asesmen
  #     description: Mengambil detail asesmen berdasarkan ID
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         description: ID asesmen yang ingin diambil
  #         schema:
  #           type: integer
  #     responses:
  #       "200":
  #         description: Detail asesmen berhasil diambil
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 data:
  #                   type: object
  #                   properties:
  #                     id:
  #                       type: integer
  #                     schema_id:
  #                       type: integer
  #                     code:
  #                       type: string
  #                     status:
  #                       type: string
  #                     start_date:
  #                       type: string
  #                       format: date-time
  #                     end_date:
  #                       type: string
  #                       format: date-time
  #             example:
  #               success: true
  #               message: "Detail asesmen berhasil diambil"
  #               data:
  #                 id: 1
  #                 schema_id: 1
  #                 code: "ASSESS-001"
  #                 status: "active"
  #                 start_date: "2023-10-01T00:00:00Z"
  #                 end_date: "2023-10-31T23:59:59Z"
  #       "404":
  #         description: Asesmen tidak ditemukan
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: false
  #               message: "Assessment not found"
  #       "500":
  #         description: Server error
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: false
  #               message: "Server error"

  #   put:
  #     tags:
  #       - assessement
  #     summary: Memperbarui asesmen
  #     description: Memperbarui asesmen dengan schema_id, code, status, start_date, dan end_date
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         description: ID asesmen yang ingin diperbarui
  #         schema:
  #           type: integer
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             required:
  #               - schema_id
  #               - code
  #               - status
  #               - start_date
  #               - end_date
  #             properties:
  #               schema_id:
  #                 type: integer
  #               code:
  #                 type: string
  #               status:
  #                 type: string
  #               start_date:
  #                 type: string
  #                 format: date-time
  #               end_date:
  #                 type: string
  #                 format: date-time
  #           example:
  #             schema_id: 1
  #             code: "ASSESS-001"
  #             status: "active"
  #             start_date: "2023-10-01T00:00:00Z"
  #             end_date: "2023-10-31T23:59:59Z"
  #     responses:
  #       "200":
  #         description: Asesmen berhasil diperbarui
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #                 data:
  #                   type: object
  #                   properties:
  #                     id:
  #                       type: integer
  #                     schema_id:
  #                       type: integer
  #                     code:
  #                       type: string
  #                     status:
  #                       type: string
  #                     start_date:
  #                       type: string
  #                       format: date-time
  #                     end_date:
  #                       type: string
  #                       format: date-time
  #             example:
  #               success: true
  #               message: "Asesmen berhasil diperbarui"
  #               data:
  #                 id: 1
  #                 schema_id: 1
  #                 code: "ASSESS-001"
  #                 status: "active"
  #                 start_date: "2023-10-01T00:00:00Z"
  #                 end_date: "2023-10-31T23:59:59Z"
  #       "404":
  #         description: Asesmen tidak ditemukan
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: false
  #               message: "Assessment not found"
  #       "500":
  #         description: Server error
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: false
  #               message: "Server error"

  #   delete:
  #     tags:
  #       - assessement
  #     summary: Menghapus asesmen
  #     description: Menghapus asesmen berdasarkan id asesmen
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         description: ID asesmen yang ingin dihapus
  #         schema:
  #           type: integer
  #     responses:
  #       "200":
  #         description: Asesmen berhasil dihapus
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: true
  #               message: "Asesmen berhasil dihapus"
  #       "404":
  #         description: Asesmen tidak ditemukan
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: false
  #               message: "Assessment not found"
  #       "500":
  #         description: Server error
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: false
  #               message: "Server error"

  # /assessor:
  #   post:
  #     tags:
  #       - assessor
  #     summary: Membuat asesor
  #     description: Membuat data asesor dengan user_id, scheme_id, address, phone_no, dan birth_date
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             required:
  #               - user_id
  #               - scheme_id
  #               - address
  #               - phone_no
  #               - birth_date
  #             properties:
  #               user_id:
  #                 type: integer
  #               scheme_id:
  #                 type: integer
  #               address:
  #                 type: string
  #               phone_no:
  #                 type: string
  #               birth_date:
  #                 type: string
  #                 format: date
  #           example:
  #             user_id: 5
  #             scheme_id: 2
  #             address: "Jl. Mawar No. 10, Jakarta"
  #             phone_no: "081234567890"
  #             birth_date: "1990-05-20"
  #     responses:
  #       "201":
  #         description: Asesor berhasil dibuat
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #                 data:
  #                   type: object
  #                   properties:
  #                     id:
  #                       type: integer
  #                     user_id:
  #                       type: integer
  #                     scheme_id:
  #                       type: integer
  #                     address:
  #                       type: string
  #                     phone_no:
  #                       type: string
  #                     birth_date:
  #                       type: string
  #                       format: date
  #             example:
  #               success: true
  #               message: "Asesor berhasil dibuat"
  #               data:
  #                 id: 1
  #                 user_id: 5
  #                 scheme_id: 2
  #                 address: "Jl. Mawar No. 10, Jakarta"
  #                 phone_no: "081234567890"
  #                 birth_date: "1990-05-20"
  #       "500":
  #         description: Server error
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: false
  #               message: "Server error"

  #   get:
  #     tags:
  #       - assessor
  #     summary: Mendapatkan daftar asesor
  #     description: Mengambil semua data asesor yang tersedia
  #     responses:
  #       "200":
  #         description: Daftar asesor berhasil diambil
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 data:
  #                   type: array
  #                   items:
  #                     type: object
  #                     properties:
  #                       id:
  #                         type: integer
  #                       user_id:
  #                         type: integer
  #                       scheme_id:
  #                         type: integer
  #                       address:
  #                         type: string
  #                       phone_no:
  #                         type: string
  #                       birth_date:
  #                         type: string
  #                         format: date
  #             example:
  #               success: true
  #               data:
  #                 - id: 1
  #                   user_id: 5
  #                   scheme_id: 2
  #                   address: "Jl. Mawar No. 10, Jakarta"
  #                   phone_no: "081234567890"
  #                   birth_date: "1990-05-20"
  #       "500":
  #         description: Server error
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: false
  #               message: "Server error"

  # /assessor/{id}:
  #   get:
  #     tags:
  #       - assessor
  #     summary: Mendapatkan detail asesor
  #     description: Mengambil detail asesor berdasarkan ID
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         description: ID asesor yang ingin diambil
  #         schema:
  #           type: integer
  #     responses:
  #       "200":
  #         description: Detail asesor berhasil diambil
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 data:
  #                   type: object
  #                   properties:
  #                     id:
  #                       type: integer
  #                     user_id:
  #                       type: integer
  #                     scheme_id:
  #                       type: integer
  #                     address:
  #                       type: string
  #                     phone_no:
  #                       type: string
  #                     birth_date:
  #                       type: string
  #                       format: date
  #             example:
  #               success: true
  #               data:
  #                 id: 1
  #                 user_id: 5
  #                 scheme_id: 2
  #                 address: "Jl. Mawar No. 10, Jakarta"
  #                 phone_no: "081234567890"
  #                 birth_date: "1990-05-20"
  #       "404":
  #         description: Asesor tidak ditemukan
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: false
  #               message: "Assessor not found"
  #       "500":
  #         description: Server error
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: false
  #               message: "Server error"

  #   put:
  #     tags:
  #       - assessor
  #     summary: Memperbarui data asesor
  #     description: Memperbarui data asesor berdasarkan ID
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         description: ID asesor yang ingin diperbarui
  #         schema:
  #           type: integer
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             required:
  #               - user_id
  #               - scheme_id
  #               - address
  #               - phone_no
  #               - birth_date
  #             properties:
  #               user_id:
  #                 type: integer
  #               scheme_id:
  #                 type: integer
  #               address:
  #                 type: string
  #               phone_no:
  #                 type: string
  #               birth_date:
  #                 type: string
  #                 format: date
  #           example:
  #             user_id: 5
  #             scheme_id: 2
  #             address: "Jl. Melati No. 12, Bandung"
  #             phone_no: "082345678901"
  #             birth_date: "1990-05-20"
  #     responses:
  #       "200":
  #         description: Asesor berhasil diperbarui
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #                 data:
  #                   type: object
  #                   properties:
  #                     id:
  #                       type: integer
  #                     user_id:
  #                       type: integer
  #                     scheme_id:
  #                       type: integer
  #                     address:
  #                       type: string
  #                     phone_no:
  #                       type: string
  #                     birth_date:
  #                       type: string
  #                       format: date
  #             example:
  #               success: true
  #               message: "Asesor berhasil diperbarui"
  #               data:
  #                 id: 1
  #                 user_id: 5
  #                 scheme_id: 2
  #                 address: "Jl. Melati No. 12, Bandung"
  #                 phone_no: "082345678901"
  #                 birth_date: "1990-05-20"
  #       "404":
  #         description: Asesor tidak ditemukan
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: false
  #               message: "Assessor not found"
  #       "500":
  #         description: Server error
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: false
  #               message: "Server error"

  #   delete:
  #     tags:
  #       - assessor
  #     summary: Menghapus data asesor
  #     description: Menghapus data asesor berdasarkan ID
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         description: ID asesor yang ingin dihapus
  #         schema:
  #           type: integer
  #     responses:
  #       "200":
  #         description: Asesor berhasil dihapus
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: true
  #               message: "Asesor berhasil dihapus"
  #       "404":
  #         description: Asesor tidak ditemukan
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: false
  #               message: "Assessor not found"
  #       "500":
  #         description: Server error
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #             example:
  #               success: false
  #               message: "Server error"

  # /assesse:
  #   post:
  #     tags:
  #       - assessee
  #     summary: Membuat assesse
  #     description: Membuat data assesse baru dengan informasi lengkap
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             required:
  #               - user_id
  #               - identity_number
  #               - birth_date
  #               - birth_location
  #               - gender
  #               - nationality
  #               - phone_no
  #               - address
  #               - educational_qualifications
  #             properties:
  #               user_id:
  #                 type: string
  #               identity_number:
  #                 type: string
  #               birth_date:
  #                 type: string
  #                 format: date
  #               birth_location:
  #                 type: string
  #               gender:
  #                 type: string
  #                 enum: [Male, Female]
  #               nationality:
  #                 type: string
  #               phone_no:
  #                 type: string
  #               address:
  #                 type: string
  #               educational_qualifications:
  #                 type: string
  #           example:
  #             user_id: "USR001"
  #             identity_number: "1234567890123456"
  #             birth_date: "1995-04-10"
  #             birth_location: "Surabaya"
  #             gender: "Male"
  #             nationality: "Indonesia"
  #             phone_no: "081234567890"
  #             address: "Jl. Merdeka No. 20"
  #             educational_qualifications: "Sarjana Komputer"
  #     responses:
  #       "201":
  #         description: Assesse berhasil dibuat
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 message:
  #                   type: string
  #                 data:
  #                   type: object
  #             example:
  #               success: true
  #               message: "Assesse berhasil dibuat"
  #               data:
  #                 id: 1
  #                 user_id: "USR001"
  #                 identity_number: "1234567890123456"
  #                 birth_date: "1995-04-10"
  #                 birth_location: "Surabaya"
  #                 gender: "Male"
  #                 nationality: "Indonesia"
  #                 phone_no: "081234567890"
  #                 address: "Jl. Merdeka No. 20"
  #                 educational_qualifications: "Sarjana Komputer"
  #       "500":
  #         description: Server error
  #         content:
  #           application/json:
  #             example:
  #               success: false
  #               message: "Server error"

  #   get:
  #     tags:
  #       - assessee
  #     summary: Mendapatkan daftar assesse
  #     description: Mengambil semua data assesse yang tersedia
  #     responses:
  #       "200":
  #         description: Daftar assesse berhasil diambil
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                 data:
  #                   type: array
  #                   items:
  #                     type: object
  #             example:
  #               success: true
  #               data:
  #                 - id: 1
  #                   user_id: "USR001"
  #                   identity_number: "1234567890123456"
  #                   birth_date: "1995-04-10"
  #                   birth_location: "Surabaya"
  #                   gender: "Male"
  #                   nationality: "Indonesia"
  #                   phone_no: "081234567890"
  #                   address: "Jl. Merdeka No. 20"
  #                   educational_qualifications: "Sarjana Komputer"
  #       "500":
  #         description: Server error
  #         content:
  #           application/json:
  #             example:
  #               success: false
  #               message: "Server error"

  # /assesse/{id}:
  #   get:
  #     tags:
  #       - assessee
  #     summary: Mendapatkan detail assesse
  #     description: Mengambil detail assesse berdasarkan ID
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         schema:
  #           type: integer
  #     responses:
  #       "200":
  #         description: Detail assesse berhasil diambil
  #         content:
  #           application/json:
  #             example:
  #               success: true
  #               data:
  #                 id: 1
  #                 user_id: "USR001"
  #                 identity_number: "1234567890123456"
  #                 birth_date: "1995-04-10"
  #                 birth_location: "Surabaya"
  #                 gender: "Male"
  #                 nationality: "Indonesia"
  #                 phone_no: "081234567890"
  #                 address: "Jl. Merdeka No. 20"
  #                 educational_qualifications: "Sarjana Komputer"
  #       "404":
  #         description: Assesse tidak ditemukan
  #         content:
  #           application/json:
  #             example:
  #               success: false
  #               message: "Assesse not found"
  #       "500":
  #         description: Server error
  #         content:
  #           application/json:
  #             example:
  #               success: false
  #               message: "Server error"

  #   put:
  #     tags:
  #       - assessee
  #     summary: Memperbarui data assesse
  #     description: Memperbarui data assesse berdasarkan ID
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         schema:
  #           type: integer
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             required:
  #               - user_id
  #               - identity_number
  #               - birth_date
  #               - birth_location
  #               - gender
  #               - nationality
  #               - phone_no
  #               - address
  #               - educational_qualifications
  #             properties:
  #               user_id:
  #                 type: string
  #               identity_number:
  #                 type: string
  #               birth_date:
  #                 type: string
  #                 format: date
  #               birth_location:
  #                 type: string
  #               gender:
  #                 type: string
  #                 enum: [Male, Female]
  #               nationality:
  #                 type: string
  #               phone_no:
  #                 type: string
  #               address:
  #                 type: string
  #               educational_qualifications:
  #                 type: string
  #           example:
  #             user_id: "USR001"
  #             identity_number: "1234567890123456"
  #             birth_date: "1995-04-10"
  #             birth_location: "Surabaya"
  #             gender: "Male"
  #             nationality: "Indonesia"
  #             phone_no: "081234567890"
  #             address: "Jl. Merdeka No. 20"
  #             educational_qualifications: "Sarjana Komputer"
  #     responses:
  #       "200":
  #         description: Assesse berhasil diperbarui
  #         content:
  #           application/json:
  #             example:
  #               success: true
  #               message: "Assesse berhasil diperbarui"
  #               data:
  #                 id: 1
  #                 user_id: "USR001"
  #                 identity_number: "1234567890123456"
  #                 birth_date: "1995-04-10"
  #                 birth_location: "Surabaya"
  #                 gender: "Male"
  #                 nationality: "Indonesia"
  #                 phone_no: "081234567890"
  #                 address: "Jl. Merdeka No. 20"
  #                 educational_qualifications: "Sarjana Komputer"
  #       "404":
  #         description: Assesse tidak ditemukan
  #         content:
  #           application/json:
  #             example:
  #               success: false
  #               message: "Assesse not found"
  #       "500":
  #         description: Server error
  #         content:
  #           application/json:
  #             example:
  #               success: false
  #               message: "Server error"

  #   delete:
  #     tags:
  #       - assessee
  #     summary: Menghapus data assesse
  #     description: Menghapus assesse berdasarkan ID
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         schema:
  #           type: integer
  #     responses:
  #       "200":
  #         description: Assesse berhasil dihapus
  #         content:
  #           application/json:
  #             example:
  #               success: true
  #               message: "Assesse berhasil dihapus"
  #       "404":
  #         description: Assesse tidak ditemukan
  #         content:
  #           application/json:
  #             example:
  #               success: false
  #               message: "Assesse not found"
  #       "500":
  #         description: Server error
  #         content:
  #           application/json:
  #             example:
  #               success: false
  #               message: "Server error"
